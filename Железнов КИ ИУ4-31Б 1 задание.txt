#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <malloc.h>
#include <windows.h>
#include <conio.h>
#include <math.h>
#include <time.h>

double Dpower(double, int);
int power(int, int);
int scanstr(char*);
double DMYatoi(char*);
int MYatoi(char*);
int vivodall(double*, int);
int funcBIN(double);
int gus();
int secretgus();

int main()
{
	int n = 1;
	int all = 1;
	double* mass = (double*)malloc(n * sizeof(double));
	char promej[10000];
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	printf("Приветствую в программе перевода массива десятеричных чисел в массив двоичных\n");
	printf("Для выхода напишите \"Выход\"\n");
	printf("Если вы записали все числа напишите \"Продолжить\"\n");
	while (1)
	{
		printf("\nВведите число: ");
		scanstr(promej);
		if (strcmp(promej, "Продолжить") != 0 && strcmp(promej, "Выход") != 0 && strcmp(promej, "random") != 0 && DMYatoi(promej) == -1)
		{
			printf("Вы ввели что-то некорректное.\n");
			printf("Либо была допущена ошибка при вводе слова, либо буква при введении числа\n");
		}
		else if (strcmp(promej, "Продолжить") == 0 || strcmp(promej, "Выход") == 0)
			break;
		else if (strcmp(promej, "random") == 0)
		{
			int ran;
			printf("Сколько чисел: ");
			scanstr(promej);
			srand(time(NULL));
			ran = DMYatoi(promej);
			for (int i = 0; i < ran; ++i)
			{
				mass = (double*)realloc(mass, (n + 1) * sizeof(double));
				mass[n - 1] = rand();
				++n;
			}
		}
		else
		{
			mass = (double*)realloc(mass, (n + 1) * sizeof(double));
			mass[n - 1] = DMYatoi(promej);
			++n;
		}
	}
	if (strcmp(promej, "Выход") == 0);
	else
	{
		--n;
		while (1)
		{
			system("cls");
			printf("Для вывода множества десятиричных чисел напишите \"10\"\n");
			printf("Для вывода множества двоичных чисел напишите \"2\"\n");
			printf("Для вывода обоих множеств (число из первого множества будет соответствовать числу из второго) напишите \"Вывод\"\n");
			printf("Для вывода обоих множеств (сначала множество десятиричных чисел) напишите \"По очереди\"\n");
			printf("Для выхода напишите \"Выход\"\nВвод: ");
			scanstr(promej);
			
			if (strcmp(promej, "Вывод") == 0)
			{
				vivodall(mass, n);
				printf("\nДля продолжения нажмите любую клавишу");
				_getch();
			}
			else if (strcmp(promej, "По очереди") == 0)
			{
				for (int i = 0; i < n; ++i)
					printf("\n%.0f\n", mass[i]);
				printf("\n");
				for (int i = 0; i < n; ++i)
				{
					funcBIN(mass[i]);
					printf("\n");
				}
				printf("\nДля продолжения нажмите любую клавишу");
				_getch();
			}
			else if (strcmp(promej, "10") == 0)
			{
				for (int i = 0; i < n; ++i)
					printf("\n%.0f\n", mass[i]);
				printf("\n");
				printf("Для продолжения нажмите любую клавишу");
				_getch();
			}
			else if (strcmp(promej, "2") == 0)
			{
				printf("\n");
				for (int i = 0; i < n; ++i)
				{
					funcBIN(mass[i]);
					printf("\n");
				}
				printf("\nДля продолжения нажмите любую клавишу");
				_getch();
			}
			else if (strcmp(promej, "Выход") == 0)
				break;
			else if (strcmp(promej, "РАБОТЯГИ") == 0)
				secretgus();
			else
			{
				printf("\nВы ввели не то, что требуется");
				printf("\nДля продолжения нажмите любую клавишу");
				_getch();
			}
		}
	}

	system("cls");
	printf("Спасибо за выбор именно моей программы\n\n");
	gus();
	_getch();
	system("cls");

	free(mass);

	return 0;
}

int vivodall(double* mass, int n)
{
	for (int i = 0; i < n; ++i)
	{
		printf("\n");
		printf("|%d:\t %.0f  ||  ", i + 1, mass[i]);
		funcBIN(mass[i]);
	}

	return 1;
}

int funcBIN(double numb)
{
	double n = 2;
	int col = 2;
	int* mass;

	while (n <= numb)
	{
		n *= 2;
		++col;
	}

	mass = (int*)malloc(col * sizeof(int));
	mass[col - 1] = '\0';
	for (int i = col - 2; i >= 0; --i)
	{
		if (fmod(numb, 2) == 0)
			mass[i] = '0';
		else
		{
			mass[i] = '1';
			--numb;
		}
		numb /= 2;
	}

	for (int i = 0; mass[i] != '\0'; ++i)
		printf("%c", mass[i]);

	printf("\n");

	free(mass);
	return 1;
}

double Dpower(double x, int n)							
{
	int i;
	double p;
	p = 1;

	if (n > 0)
		for (i = 1; i <= n; ++i)
			p = p * x;
	return p;
}

int power(int x, int n)
{
	int i;
	int p;
	p = 1;

	if (n > 0)
		for (i = 1; i <= n; ++i)
			p = p * x;
	return p;
}

int scanstr(char* str)
{

	char c = getchar();

	while (c == ' ' || c == '\t' || c == '\n')
	{
		c = getchar();
	}
	str[0] = c;


	int i;
	for (i = 0; str[i] != '\n'; ++i)
	{

		str[i + 1] = getchar();

	}
	str[i] = '\0';
	return 1;
}

int MYatoi(char* massiv)
{
	int l, i = 0;
	int p = 0;
	while (massiv[i] != '\0')
	{
		if (massiv[i] < '0' || massiv[i]>'9')
			return -1;
		++i;
	}
	for (l = 0; massiv[l] != '\0'; ++l)
	{
		--i;
		p = p + (massiv[l] - '0') * power(10, i);
	}

	return p;
}

double DMYatoi(char* massiv)
{
	int l, i = 0;
	double p = 0;
	while (massiv[i] != '\0')
	{
		if (massiv[i] < '0' || massiv[i]>'9')
			return -1;
		++i;
	}
	for (l = 0; massiv[l] != '\0'; ++l)
	{
		--i;
		p = p + (massiv[l] - '0') * Dpower(10, i);
	}

	return p;
}


int gus()
{
	int c;
	FILE* gouse = fopen("gouse2.txt", "r");
	if (gouse == 0)
	{
		printf("Гусь не найден");
		return 1;
	}
	printf("\n\nВЗГЛЯНИ ВОКРУГ,\n\t\tОГЛЯНИСЬ НАЗАД\n\tГУСИ С ТОБОЮ\n");
	SetConsoleCP(866);
	SetConsoleOutputCP(866);
	while ((c = fgetc(gouse)) != EOF)
	{
		if (c == '1')
			printf("%c", 176);
		else if (c == '2')
			printf("%c", 219);
		else if (c == '3')
			printf("%c", 220);
		else if (c == '4')
			printf("%c", 223);
		else if (c == '5')
			printf("%c", 221);
		else if (c == '6')
			printf("%c", 222);
		else if (c == '7')
			printf("%c", 177);
		else
			putchar(c);
	}
	fclose(gouse);
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	printf("\tСВЯЗАТЬСЯ ХОТЯТ\n");

	return 1;
}

int secretgus()
{
	int c;
	FILE* gouse = fopen("gouse.txt", "r");
	if (gouse == 0)
	{
		printf("Гусь не найден");
		return 1;
	}
	printf("Вы открыли секретный уровень!!!\n\n\tЗАПУСКАЕМ ГУСЯ РАБОТЯГИ\n");
	SetConsoleCP(866);
	SetConsoleOutputCP(866);
	gouse = fopen("gouse.txt", "r");
	while ((c = fgetc(gouse)) != EOF)
	{
		if (c == '1')
			printf("%c", 176);
		else if (c == '2')
			printf("%c", 219);
		else if (c == '3')
			printf("%c", 220);
		else if (c == '4')
			printf("%c", 223);
		else if (c == '5')
			printf("%c", 221);
		else if (c == '6')
			printf("%c", 222);
		else if (c == '7')
			printf("%c", 177);
		else
			putchar(c);
	}
	fclose(gouse);
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	printf("\n\n");
	_getch();
	return 1;
}
